JSLintReplacementValidator_AdsafeA=ADsafe violation: ''{0}''.
JSLintReplacementValidator_ALabel=''{0}'' is a statement label.
JSLintReplacementValidator_AlreadyDefined=''{0}'' is already defined.
JSLintReplacementValidator_And=The '&&' subexpression should be wrapped in parens.
JSLintReplacementValidator_AScope=''{0}'' used out of scope.
JSLintReplacementValidator_AssignException=Do not assign to the exception parameter.
JSLintReplacementValidator_AvoidA=Avoid ''arguments.{0}''.
JSLintReplacementValidator_BadAssignment=Bad assignment.
JSLintReplacementValidator_BadNew=Do not use 'new' for side effects.
JSLintReplacementValidator_BadNumber=Bad number ''{0}''.
JSLintReplacementValidator_BadWrap=Do not wrap function literals in parens unless they are to be immediately invoked.
JSLintReplacementValidator_ConditionalAssignment=Expected a conditional expression and instead saw an assignment.
JSLintReplacementValidator_ConstructorNameA=A constructor name ''{0}'' should start with an uppercase letter.
JSLintReplacementValidator_DangerousComment=Dangerous comment.
JSLintReplacementValidator_DanglingA=Unexpected dangling ''_'' in ''{0}''.
JSLintReplacementValidator_EmptyBlock=Empty block.
JSLintReplacementValidator_EmptyClass=Empty class.
JSLintReplacementValidator_Evil=eval is evil.
JSLintReplacementValidator_ExpectedNumberA=Expected a number and instead saw ''{0}''.
JSLintReplacementValidator_FunctionEval=The Function constructor is eval.
JSLintReplacementValidator_ImpliedEvil=Implied eval is evil. Pass a function instead of a string.
JSLintReplacementValidator_LeadingDecimalA=A leading decimal point can be confused with a dot: ''{0}''.
JSLintReplacementValidator_NotAConstructor=Do not use {0} as a constructor.
JSLintReplacementValidator_NotGreater=''{0}'' should not be greater than ''{1}''.
JSLintReplacementValidator_ParameterArgumentsA=Do not mutate parameter ''{0}'' when using ''arguments''.
JSLintReplacementValidator_Radix=Missing radix parameter.
JSLintReplacementValidator_ReservedA=Reserved name ''{0}''.
JSLintReplacementValidator_StrangeLoop=Strange loop.
JSLintReplacementValidator_Subscript=[''{0}''] is better written in dot notation.
JSLintReplacementValidator_Sync=Unexpected sync method: ''{0}''.
JSLintReplacementValidator_TrailingDecimalA=A trailing decimal point can be confused with a dot: ''{0}''.
JSLintReplacementValidator_UnexpectedA=Unexpected ''{0}''.
JSLintReplacementValidator_UnnecessaryInitialize=It is not necessary to initialize ''{0}'' to ''undefined''.
JSLintReplacementValidator_UnreachableAB=Unreachable ''{0}'' after ''{1}''.
JSLintReplacementValidator_UseArray=Use the array literal notation [].
JSLintReplacementValidator_UseBraces=Spaces are hard to count. Use '{'{0}'}'.
JSLintReplacementValidator_UsedBeforeA=''{0}'' was used before it was defined.
JSLintReplacementValidator_UseObject=Use the object literal notation {}.
JSLintReplacementValidator_UseParam=Use a named parameter.
JSLintReplacementValidator_VarANot=Variable {0} was not declared correctly.
JSLintReplacementValidator_WeirdNew=Weird construction. Delete 'new'.
JSLintReplacementValidator_WeirdProgram=Weird program.
JSLintReplacementValidator_WrapImmediate=Wrap an immediate function invocation in parentheses to assist the reader in understanding that the expression is the result of a function, and not the function itself.
JSLintReplacementValidator_WriteIsWrong=document.write can be a form of eval.
JSLintValidator_ERR_FailToGetJSLint=Failed to retrieve the JSLint script
